b ZEND_ECHO_SPEC_CV_HANDLER  PHP 变量调试断点

r zval.php 运行对应的文件

n  继续下行执行

p 打印对应的数据

c  继续往下执行运行代码

打印对应的断点才能调试对应的信息


/************词法分析语法分析的过程**********/

 b php_execute_script    //执行脚本

 b open_file_for_scanning  //解析文件

 b zendparse             //语法分析

 b zendlex               //词法分析


1.PHP-fpm 主进程干掉 worker 进程依然能工作  master 进程只是做管理工作

1.知识盲点位运算掌握不够好

1.什么是哈希表
    哈希表(或散列表)，是将键名key按指定的散列函数HASH经过HASH(key)计算后映射到表中一个记录，而这个数组就是哈希表。
    这里的HASH指任意的函数，例如MD5、CRC32、SHA1或你自定义的函数实现。
1.2
    HashTable是一种查找性能极高的数据结构，在很多语言内部都实现了HashTable。
    理想情况下HashTable的性能是O(1)的，性能消耗主要集中在散列函数HASH(key)，通过HASH(key)直接定位到表中的记录。
    而在实际情况下经常会发生key1 != key2，但HASH(key1) = HASH(key2)，这种情况即Hash碰撞问题，
    碰撞的概率越低HashTable的性能越好。当然Hash算法太过复杂也会影响HashTable性能。

1.3

    Hashtable 的概念：字符串的键先会被传递给一个 hash 函数（hashing function，中文也翻译为散列函数）,
    然后这个函数会返回一个整数，而这个整数就是“通常”的数组的索引，通过这个数字索引可以访问到 字符串的键对应的数据

1.4

   关于 HashTable 的几个概念:
        键(key)：用于操作数据的标示，例如PHP数组中的索引，或者字符串键等等。
        槽(slot/bucket)：哈希表中用于保存数据的一个单元，也就是数据真正存放的容器。
        哈希函数(hash function)：将key映射(map)到数据应该存放的slot所在位置的函数。
        哈希冲突(hash collision)：哈希函数将两个不同的key映射到同一个索引的情况。


