1.内存池直接代替了 传统的malloc /free，calloc 等方法然后进程内存管理，当我们申请内存的时候 首先到我们的内存池查找合适的内存块
  而不是想操作系统申请内存
  优势：
      A.比malloc/free 进行内存申请和释放的方式快
      B.降低使用和产生内存堆分片
      C.可避免内存泄露



那么调用malloc时底层都发生了什么呢？简单来说会有这样典型的几个步骤：

 1.malloc开始搜索空闲内存块，如果能找到一块大小合适的就分配出去如果malloc找不到一块合适的空闲内存，
 2.那么调用brk等系统调用扩大堆区从而获得更多的空闲内存malloc调用brk后开始转入内核态，

 3.此时操作系统中的虚拟内存系统开始工作，扩大进程的堆区，注意额外扩大的这一部分内存仅仅是虚拟内存，
 操作系统并没有为此分配真正的物理内存brk执行结束后返回到malloc，从内核态切换到用户态，
 malloc找到一块合适的空闲内存后返回

1.当malloc返回后，程序员申请到的内存就是虚拟内存
1.标准库是用户态的 可以适用不同的操作系统 这样程序员写的程序无需无需修改在不同的操作系统上运行了再C语言中这就是所谓的标准库

//目标要分析两个软件的内存池 
  1.PHP  2.nginx 这也是工作中常用的技术软件