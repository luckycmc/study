3)x86_64含有16个64为整数寄存器

%rsi,%rdi 用于字符串处理

%rsp,%rbp 栈相关,栈从高地址到低地址 %rsp ---> 栈顶，push和pop会改变 %rbp ---> 栈基址

%8~%15

5)函数的调用约定

a.整型参数依次存放在 %rdi,%rsi,%rdx,%rcx,%8,%9

b.浮点参数依次存放在%xmm0 - %xmm7中

c.寄存器不够用时，参数放到栈中

d.被调用的函数可以使用任何寄存器，但它必须保证%rbx,%rbp,%rsp,and %12-%15恢复到原来的值

e.返回值存放在%rax中

6)调用函数前

调用方要将参数放到寄存器中

然后把%10,%11的值保存到栈中

然后调用call 跳转到函数执行

返回后，恢复%10,%11

从%eax中取出返回值

简单初步理解堆栈：

1、就是一块内存，操作系统在程序启动时候就分配好的，供程序执行使用。

2、很重要就对了！对底层安全尤为重要，需要认真学。

3、堆栈是程序执行所用，从下往上使用，如果堆栈用完，会“堆栈溢出”程序也会崩溃。

4、栈指针寄存器（ESP）:指向当前栈的地址，可以右键选择“flow” 也称为栈基(栈顶的基地址)

我们仍可以继续使用mov指令往堆栈中存入数据，具体操作如下：

1、首先在ESP指针定位到目前栈的位置。(也就是栈的基地址)

2、使用mov指令存入数据。

3、使用sub指令更改ESP指向地址。