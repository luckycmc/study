1.所以，TCP 保活机制可以在双方没有数据交互的情况，通过探测报文，来确定对方的 TCP 连接是否存活。

2.我们可以得知一个点，在没有使用 TCP 保活机制且双方不传输数据的情况下，
一方的 TCP 连接处在 ESTABLISHED 状态，并不代表另一方的连接还一定正常。

3.TCP 的连接信息是由内核维护的，所以当服务端的进程崩溃后，内核需要回收该进程的所有 
TCP 连接资源，于是内核会发送第一次挥手 FIN 报文，后续的挥手过程也都是在内核完成，
并不需要进程的参与，所以即使服务端的进程退出了，还是能与客户端完成 TCP四次挥手的过程。

总结：
  如果「客户端进程崩溃」，客户端的进程在发生崩溃的时候，内核会发送 FIN 报文，
  与服务端进行四次挥手。

但是，「客户端主机宕机」，那么是不会发生四次挥手的，具体后续会发生什么？
   还要看服务端会不会发送数据？

如果服务端会发送数据，由于客户端已经不存在，收不到数据报文的响应报文，
服务端的数据报文会超时重传，当重传总间隔时长达到一定阈值（内核会根据 tcp_retries2 
设置的值计算出一个阈值）后，会断开 TCP 连接；如果服务端一直不会发送数据，再看服务端有没有开启 TCP keepalive 机制？
如果有开启，服务端在一段时间没有进行数据交互时，会触发 TCP keepalive 机制，
探测对方是否存在，如果探测到对方已经消亡，则会断开自身的 TCP 连接；
如果没有开启，服务端的 TCP 连接会一直存在，并且一直保持在 ESTABLISHED 状态。
最后说句，TCP 牛逼，啥异常都考虑到了。